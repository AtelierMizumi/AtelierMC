From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: JustMangoT <minetuan2@gmail.com>
Date: Fri, 10 Dec 2021 12:24:01 +0700
Subject: [PATCH] Optimized halloween checker


diff --git a/src/main/java/net/minecraft/server/MinecraftServer.java b/src/main/java/net/minecraft/server/MinecraftServer.java
index 4eab5f0ab87504c544b4fb574704a7b6394addf6..71fe392c3e81421dcbb2b1dc7c3dab8413775de3 100644
--- a/src/main/java/net/minecraft/server/MinecraftServer.java
+++ b/src/main/java/net/minecraft/server/MinecraftServer.java
@@ -2,9 +2,6 @@ package net.minecraft.server;
 
 import com.google.common.base.Splitter;
 import com.google.common.collect.ImmutableList;
-import co.aikar.timings.Timings;
-import com.destroystokyo.paper.event.server.PaperServerListPingEvent;
-import com.google.common.base.Stopwatch;
 import com.google.common.collect.Lists;
 import com.google.common.collect.Maps;
 import com.google.common.collect.Sets;
@@ -85,7 +82,6 @@ import net.minecraft.server.level.ServerChunkCache;
 import net.minecraft.server.level.ServerLevel;
 import net.minecraft.server.level.ServerPlayer;
 import net.minecraft.server.level.ServerPlayerGameMode;
-import net.minecraft.server.level.TicketType;
 import net.minecraft.server.level.progress.ChunkProgressListener;
 import net.minecraft.server.level.progress.ChunkProgressListenerFactory;
 import net.minecraft.server.network.ServerConnectionListener;
@@ -105,7 +101,6 @@ import net.minecraft.util.ModCheck;
 import net.minecraft.util.Mth;
 import net.minecraft.util.NativeModuleLister;
 import net.minecraft.util.ProgressListener;
-import net.minecraft.util.Unit;
 import net.minecraft.util.datafix.DataFixers;
 import net.minecraft.util.profiling.EmptyProfileResults;
 import net.minecraft.util.profiling.ProfileResults;
@@ -176,15 +171,13 @@ import net.minecraft.resources.RegistryReadOps;
 import net.minecraft.server.bossevents.CustomBossEvents;
 import net.minecraft.server.dedicated.DedicatedServer;
 import net.minecraft.server.dedicated.DedicatedServerProperties;
-import org.bukkit.Bukkit;
-import org.bukkit.craftbukkit.CraftServer;
-import org.bukkit.craftbukkit.Main;
 import org.bukkit.craftbukkit.generator.CustomWorldChunkManager;
 import org.bukkit.event.server.ServerLoadEvent;
 // CraftBukkit end
 
 import co.aikar.timings.MinecraftTimings; // Paper
 import org.spigotmc.SlackActivityAccountant; // Spigot
+import tech.aterliermc.ateliermc.HalloweenChecker;
 
 public abstract class MinecraftServer extends ReentrantBlockableEventLoop<Runnable> implements CommandSource, AutoCloseable {
 
@@ -1535,6 +1528,7 @@ public abstract class MinecraftServer extends ReentrantBlockableEventLoop<Runnab
             this.runAllTasks();
         }
         // Paper end
+        HalloweenChecker.tick(); // AtelierMC
         // Paper start
         long endTime = System.nanoTime();
         long remaining = (TICK_TIME - (endTime - lastTick)) - catchupTime;
diff --git a/src/main/java/net/minecraft/world/entity/ambient/Bat.java b/src/main/java/net/minecraft/world/entity/ambient/Bat.java
index a76b754305036bf9c6387e27b86ec1559b290774..51b332fd8699984fbf8abcc44692394439bd76e0 100644
--- a/src/main/java/net/minecraft/world/entity/ambient/Bat.java
+++ b/src/main/java/net/minecraft/world/entity/ambient/Bat.java
@@ -1,7 +1,5 @@
 package net.minecraft.world.entity.ambient;
 
-import java.time.LocalDate;
-import java.time.temporal.ChronoField;
 import java.util.Random;
 import javax.annotation.Nullable;
 import net.minecraft.core.BlockPos;
@@ -29,6 +27,7 @@ import net.minecraft.world.level.LevelAccessor;
 import net.minecraft.world.level.block.state.BlockState;
 import net.minecraft.world.phys.Vec3;
 import org.bukkit.craftbukkit.event.CraftEventFactory; // CraftBukkit
+import tech.aterliermc.ateliermc.HalloweenChecker;
 
 public class Bat extends AmbientCreature {
 
@@ -254,11 +253,15 @@ public class Bat extends AmbientCreature {
         }
     }
 
+    // AtelierMC start - optimized halloween checker
+    /*
     // Pufferfish start - only check for spooky season once an hour
     private static boolean isSpookySeason = false;
     private static final int ONE_HOUR = 20 * 60 * 60;
     private static int lastSpookyCheck = -ONE_HOUR;
+    */
     private static boolean isHalloween() {
+        /*
         if (net.minecraft.server.MinecraftServer.currentTick - lastSpookyCheck > ONE_HOUR) {
         LocalDate localdate = LocalDate.now();
         int i = localdate.get(ChronoField.DAY_OF_MONTH);
@@ -267,9 +270,11 @@ public class Bat extends AmbientCreature {
         isSpookySeason = j == 10 && i >= 20 || j == 11 && i <= 3;
         lastSpookyCheck = net.minecraft.server.MinecraftServer.currentTick;
         }
-        return isSpookySeason;
+        */
+        return HalloweenChecker.isHalloweenSeason();
     }
     // Pufferfish end
+    // AtelierMC end
 
     @Override
     protected float getStandingEyeHeight(Pose pose, EntityDimensions dimensions) {
diff --git a/src/main/java/net/minecraft/world/entity/monster/AbstractSkeleton.java b/src/main/java/net/minecraft/world/entity/monster/AbstractSkeleton.java
index e23fe546291e670f89447398507d08a0a07efa85..3664054eae24bf223d23406fc0d93e90c8597ebb 100644
--- a/src/main/java/net/minecraft/world/entity/monster/AbstractSkeleton.java
+++ b/src/main/java/net/minecraft/world/entity/monster/AbstractSkeleton.java
@@ -1,7 +1,5 @@
 package net.minecraft.world.entity.monster;
 
-import java.time.LocalDate;
-import java.time.temporal.ChronoField;
 import javax.annotation.Nullable;
 import net.minecraft.core.BlockPos;
 import net.minecraft.nbt.CompoundTag;
@@ -43,6 +41,7 @@ import net.minecraft.world.level.Level;
 import net.minecraft.world.level.ServerLevelAccessor;
 import net.minecraft.world.level.block.Blocks;
 import net.minecraft.world.level.block.state.BlockState;
+import tech.aterliermc.ateliermc.HalloweenChecker;
 
 public abstract class AbstractSkeleton extends Monster implements RangedAttackMob {
 
@@ -155,14 +154,19 @@ public abstract class AbstractSkeleton extends Monster implements RangedAttackMo
         this.reassessWeaponGoal();
         this.setCanPickUpLoot(this.level.paperConfig.skeletonsAlwaysCanPickUpLoot || this.random.nextFloat() < 0.55F * difficulty.getSpecialMultiplier()); // Paper
         if (this.getItemBySlot(EquipmentSlot.HEAD).isEmpty()) {
+            // AtelierMC start - optimized halloween checker
+            /*
             LocalDate localdate = LocalDate.now();
             int i = localdate.get(ChronoField.DAY_OF_MONTH);
             int j = localdate.get(ChronoField.MONTH_OF_YEAR);
 
             if (j == 10 && i == 31 && this.random.nextFloat() < 0.25F) {
+            */
+            if (HalloweenChecker.isHalloweenDay() && this.random.nextFloat() < 0.25F) {
                 this.setItemSlot(EquipmentSlot.HEAD, new ItemStack(this.random.nextFloat() < 0.1F ? Blocks.JACK_O_LANTERN : Blocks.CARVED_PUMPKIN));
                 this.armorDropChances[EquipmentSlot.HEAD.getIndex()] = 0.0F;
             }
+            // AtelierMC end
         }
 
         return entityData;
diff --git a/src/main/java/net/minecraft/world/entity/monster/Zombie.java b/src/main/java/net/minecraft/world/entity/monster/Zombie.java
index 35f0203d260c11b729c30e6241316fda4b70bfd7..3ebb00cb3318b20fc2979814dd2612ab7b9e6ba9 100644
--- a/src/main/java/net/minecraft/world/entity/monster/Zombie.java
+++ b/src/main/java/net/minecraft/world/entity/monster/Zombie.java
@@ -1,7 +1,5 @@
 package net.minecraft.world.entity.monster;
 
-import java.time.LocalDate;
-import java.time.temporal.ChronoField;
 import java.util.List;
 import java.util.Random;
 import java.util.UUID;
@@ -71,6 +69,7 @@ import org.bukkit.event.entity.CreatureSpawnEvent;
 import org.bukkit.event.entity.EntityCombustByEntityEvent;
 import org.bukkit.event.entity.EntityTargetEvent;
 import org.bukkit.event.entity.EntityTransformEvent;
+import tech.aterliermc.ateliermc.HalloweenChecker;
 // CraftBukkit end
 
 public class Zombie extends Monster {
@@ -541,14 +540,19 @@ public class Zombie extends Monster {
         }
 
         if (this.getItemBySlot(EquipmentSlot.HEAD).isEmpty()) {
+            // AtelierMC start - optimized halloween checker
+            /*
             LocalDate localdate = LocalDate.now();
             int i = localdate.get(ChronoField.DAY_OF_MONTH);
             int j = localdate.get(ChronoField.MONTH_OF_YEAR);
 
             if (j == 10 && i == 31 && this.random.nextFloat() < 0.25F) {
+            */
+            if (HalloweenChecker.isHalloweenDay() && this.random.nextFloat() < 0.25F) {
                 this.setItemSlot(EquipmentSlot.HEAD, new ItemStack(this.random.nextFloat() < 0.1F ? Blocks.JACK_O_LANTERN : Blocks.CARVED_PUMPKIN));
                 this.armorDropChances[EquipmentSlot.HEAD.getIndex()] = 0.0F;
             }
+            // AtelierMC end
         }
 
         this.handleAttributes(f);
diff --git a/src/main/java/tech/aterliermc/ateliermc/HalloweenChecker.java b/src/main/java/tech/aterliermc/ateliermc/HalloweenChecker.java
new file mode 100644
index 0000000000000000000000000000000000000000..be0c03e73ccfcff2d21b5977e39227d90aef455c
--- /dev/null
+++ b/src/main/java/tech/aterliermc/ateliermc/HalloweenChecker.java
@@ -0,0 +1,56 @@
+package tech.aterliermc.ateliermc;
+
+import java.time.LocalDate;
+import java.time.temporal.ChronoField;
+import net.minecraft.server.MinecraftServer;
+
+/**
+ * Entity halloween checker
+ * <p>
+ * Checks whether it is halloween at a specific rate rather than every time when
+ * an entity is being spawned.
+ * <p>
+ * The rate changes depending on how much TPS the server has. By default, the rate is every
+ * 2 hours, or every 144k ticks (if the server has _that_ much uptime)
+ *
+ * @author MrIvanPlays
+ */
+public class HalloweenChecker {
+    private static boolean halloweenSeason = false;
+    private static boolean halloweenDay = false;
+
+    private static int delay = (20 * 60 * 60) * 2;
+    private static int lastCheckTick = -delay;
+
+    public static void tick() {
+        if (MinecraftServer.currentTick % 100 == 0) {
+            // update the delay every 100 ticks
+            if (MinecraftServer.TPS >= 20) {
+                delay = (20 * 60 * 60) * 2;
+            }
+            if (MinecraftServer.TPS < 15) {
+                delay = delay + (20 * 60 * 15);
+            }
+            if (MinecraftServer.TPS < 10) {
+                delay = delay + (20 * 60 * 30);
+            }
+        }
+        if (MinecraftServer.currentTick - lastCheckTick > delay) {
+            LocalDate now = LocalDate.now();
+            int day = now.getDayOfMonth();
+            int month = now.get(ChronoField.MONTH_OF_YEAR);
+
+            halloweenDay = (month == 10) && (day == 31);
+            halloweenSeason = ((month == 10) && (day >= 20)) || ((month == 11) && (day <= 3));
+            lastCheckTick = MinecraftServer.currentTick;
+        }
+    }
+
+    public static boolean isHalloweenSeason() {
+        return halloweenSeason;
+    }
+
+    public static boolean isHalloweenDay() {
+        return halloweenDay;
+    }
+}
